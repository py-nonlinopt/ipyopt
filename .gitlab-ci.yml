image: "${CI_REGISTRY_IMAGE}/manylinux2014_x86_64-ipopt:latest"
# Image is built by: docker build -t "${CI_REGISTRY_IMAGE}/manylinux2014_x86_64-ipopt" .ci
# Pushed to the registry by: docker push "${CI_REGISTRY_IMAGE}/manylinux2014_x86_64-ipopt"

build:
  stage: build
  script:
    - sed -i -e "s/version=__version__,/version=\"${CI_COMMIT_TAG}\",/" setup.py
    - /opt/python/cp38-cp38/bin/pip install .
    - /opt/python/cp38-cp38/bin/python setup.py sdist
    - >
      for py in /opt/python/cp3* ; do \
        "$py"/bin/pip wheel . -w dist ; \
      done
    - >
      for wheel in dist/ipyopt-*.whl ; do \
        auditwheel repair "$wheel" -w dist ; \
      done
  artifacts:
    name: wheel
    paths:
      - dist/ipyopt-*manylinux*.whl
      - dist/ipyopt-*.tar.gz

.install-wheel:
  before_script:
    - mkdir /tmp/ipyopt
    - pip install --no-index --find-links dist --target /tmp/ipyopt/ --no-deps ipyopt
    - pip install --no-index --find-links dist --no-deps ipyopt
    - mv /tmp/ipyopt/ipyopt.libs .
    - mv /tmp/ipyopt/ipyopt/ipyopt*.so ipyopt/

pylint:
  stage: test
  image: python:3
  extends: .install-wheel
  script:
    - pip install numpy scipy cython sympy
    - python setup_test.py build_ext --inplace
    - cythonize -3 -i examples/hs071_capsules.pyx
    - pip install pylint
    - pylint --rcfile=setup.cfg ipyopt/ test/
    - pylint --rcfile=setup.cfg --disable=duplicate-code --extension-pkg-whitelist=hs071_capsules examples/

black:
  stage: test
  image: python:3
  before_script:
    - pip install black
  script:
    - black --check .

mypy:
  stage: test
  image: quay.io/python-devs/ci-image:latest
  before_script:
    - pip install numpy
  script:
    - mypy --exclude docs/conf.py .

test-examples:
  stage: test
  before_script:
    - /opt/python/cp38-cp38/bin/pip install scipy cython sympy .
  script:
    - for script in examples/*.py ; do /opt/python/cp38-cp38/bin/python "$script" || exit 1 ; done

test:
  stage: test
  before_script:
    - /opt/python/cp38-cp38/bin/pip install numpy scipy
    - /opt/python/cp38-cp38/bin/python setup.py build_ext --inplace
    - /opt/python/cp38-cp38/bin/python setup_test.py build_ext --inplace
  script:
    - /opt/python/cp38-cp38/bin/python -m unittest

pypi:
  stage: deploy
  image: python:3.8
  variables:
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  before_script:
    - pip install twine
  script:
    - twine upload --repository-url $PYPI_REPOSITORY_URL dist/*
  only:
    - tags

pages:
  stage: deploy
  image: python:3
  extends: .install-wheel
  script:
    - pip install numpy scipy cython sympy sphinx sphinx_rtd_theme
    - sphinx-build -M html docs build
    - mv build/html public
  artifacts:
    paths:
      - public
  only:
    - master
